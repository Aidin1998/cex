openapi: 3.0.3
info:
  title: CEX Accounts API
  version: 1.0.0
  description: |
    The Accounts service manages user fiat, spot, and futures balances.
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: "8081"
        description: Accounts service port
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
paths:
  /accounts:
    post:
      summary: Create a new account
      security: [ { bearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Account created
          headers:
            Location:
              description: URL of the new account
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /accounts/{id}:
    get:
      summary: Get account by ID
      security: [ { bearerAuth: [] } ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /accounts:
    get:
      summary: List userâ€™s accounts
      security: [ { bearerAuth: [] } ]
      parameters:
        - name: offset
          in: query
          schema: { type: integer, default: 0 }
        - name: limit
          in: query
          schema: { type: integer, default: 100 }
      responses:
        '200':
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
  /healthz:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
components:
  schemas:
    CreateAccountRequest:
      type: object
      required: [owner_id]
      properties:
        owner_id:
          type: string
          format: uuid
    AccountResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        owner_id:
          type: string
          format: uuid
        balance:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  responses:
    BadRequest:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string